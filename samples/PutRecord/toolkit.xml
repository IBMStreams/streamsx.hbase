<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<toolkitModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/toolkit" productVersion="4.3.1.0" xmlns:common="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:ti="http://www.ibm.com/xmlns/prod/streams/spl/toolkitInfo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <toolkit name="PutRecord" requiredProductVersion="4.0.0.0" version="1.0.1">
    <description>
The sample **PutRecord** puts records or tuples into HBASE table, using the attribute names as **columnQualifiers**.

In order to run this sample, you must have the table created.
in HBASE shell with:

    hbase(main):004:0&gt; create 'streamsSample_books', 'all'

The **FileSource** reads records from books.csv file.

The **Functor** opeartor generates a key and forwards book records and keys to HBASEPut.

The **HBASEPut** puts tuples into HBASE table.  

We don't specify a **columnQualifier** and the attribute given by **valueAttrName** is a tuple, 
so it treats the attribute names in that tuple as columnQualifiers, 
and the attribute values.

	() as putsink = HBASEPut(toHBASE)
	{
		param
			rowAttrName : "key" ;
			tableName : "streamsSample_books" ;
			staticColumnFamily : "all" ;
			valueAttrName : "bookData" ;
	}


If you run the sample and then scan the table in hbase shell, you'll see the results.
 
    hbase(main):005:0&gt; scan 'streamsSample_books'

    </description>
    <uriTable>
      <uri index="1" value="com.ibm.streamsx.hbase.sample/PutRecord.spl"/>
    </uriTable>
    <namespace name="com.ibm.streamsx.hbase.sample">
      <compositeOp column="11" line="45" name="PutRecord" potentialMain="true" uriIndex="1"/>
    </namespace>
    <dependency>
      <common:name>com.ibm.streamsx.hbase</common:name>
      <common:version>2.0.0</common:version>
    </dependency>
    <sabFiles>
      <ti:include path="toolkit.xml" root="toolkitDir"/>
      <ti:include path="impl/java/lib/**" root="toolkitDir"/>
      <ti:include path="impl/java/bin/**" root="toolkitDir"/>
      <ti:include path="impl/bin/**" root="toolkitDir"/>
      <ti:include path="impl/lib/**" root="toolkitDir"/>
      <ti:include path="impl/nl/*.dat" root="toolkitDir"/>
      <ti:include path="etc/**" root="toolkitDir"/>
      <ti:include path="lib/**" root="toolkitDir"/>
      <ti:include path="nl/**" root="toolkitDir"/>
      <ti:include path="opt/**" root="toolkitDir"/>
    </sabFiles>
  </toolkit>

</toolkitModel>
